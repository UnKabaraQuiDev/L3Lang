let static int16 b = 13;

fun int16 strlen(int8: str) {
	asm#("mov eax, [esp + 4]  ; Copy the address of the string into eax");
	asm#("xor ecx, ecx  ; Clear ecx (counter register)");
	
	asmlb#(".loop:");
	asm#("cmp dword [eax], 0  ; Compare the byte at the current address with null terminator");
	asm#("je .done  ; If null terminator is found, exit loop");
	asm#("add dword eax, 4  ; Move to the next byte in the string");
	asm#("inc ecx  ; Increment the counter");
	asm#("jmp .loop  ; Repeat the loop");
	
	asmlb#(".done:");
	//asm#("ret  ; Return with the length of the string in ecx");
	
	let int16 length = 0;
	
	asm#("mov [esp], ecx  ; Move strlen to var");
	
	return int16 length;
}

fun void println(int8: str) {
	asm#("mov ecx, [esp + 4]  ; Copy the address of the string into eax");
	
	asmlb#(".loop:");
	asm#("cmp dword [ecx], 0  ; Compare the byte at the current address with null terminator");
	asm#("je .done  ; If null terminator is found, exit loop");
	printwrite#();
	asm#("add dword ecx, 4  ; Move to the next byte in the string");
	asm#("jmp .loop  ; Repeat the loop");
	
	asmlb#(".done:");
}

fun int main() {
	let int8: string = "test";
	break#("stop");
	println("stp");

	return int strlen("stp");
}